# Задача 16: Требуется вычислить, сколько раз встречается некоторое число X в массиве A[1..N]. 
# Пользователь в первой строке вводит натуральное число N – количество элементов в массиве. 
# В последующих  строках записаны N целых чисел Ai. Последняя строка содержит число X

# N = int(input("Колич элементов в массиве "))  # считываем количество элементов в массиве
# A = list(map(int, input("Значения массива ").split()))  # считываем элементы массива

# X = int(input("Что найти "))  # считываем число X

# count = 0  # переменная для подсчета количества вхождений числа X

# for i in range(N):
#     if A[i] == X:
#         count += 1  # увеличиваем счетчик, если текущий элемент равен X

# print(count)  # выводим результат

# # Задача 18: Требуется найти в массиве A[1..N] самый близкий по величине элемент к заданному числу X. 
# # Пользователь в первой строке вводит натуральное число N – количество элементов в массиве. 
# # В последующих  строках записаны N целых чисел Ai. Последняя строка содержит число X

# n = int(input("Колич элементов в массиве ")) # вводим количество элементов в массиве
# arr = list(map(int, input("Значения массива ").split())) # вводим элементы массива
# x = int(input("Что искать ")) # вводим число X

# closest = arr[0] # инициализируем текущий наименьший элемент значением первого элемента массива

# for i in range(1, n): # проходим по оставшимся элементам массива
#     diff = abs(arr[i] - x) # вычисляем разницу между текущим элементом и X
#     if diff < abs(closest - x): # если разница текущего элемента меньше текущего наименьшего значения
#         closest = arr[i] # обновляем текущее наименьшее значение

# print(closest) # выводим самый близкий по величине элемент к X

# *Задача 20: * В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность. 
# В случае с английским алфавитом очки распределяются так:A, E, I, O, U, L, N, S, T, R – 1 очко; D, G – 2 очка;
# B, C, M, P – 3 очка; F, H, V, W, Y – 4 очка; K – 5 очков; J, X – 8 очков; Q, Z – 10 очков. 
# А русские буквы оцениваются так: А, В, Е, И, Н, О, Р, С, Т – 1 очко; Д, К, Л, М, П, У – 2 очка; 
# Б, Г, Ё, Ь, Я – 3 очка; Й, Ы – 4 очка; Ж, З, Х, Ц, Ч – 5 очков; Ш, Э, Ю – 8 очков; Ф, Щ, Ъ – 10 очков. 
# 
# Напишите программу, которая вычисляет стоимость введенного пользователем слова. Будем считать, что на вход 
# подается только одно слово, которое содержит либо только английские, либо только русские буквы.

def calculate_score(word):
    english_scores = {'A': 1, 'E': 1, 'I': 1, 'O': 1, 'U': 1, 'L': 1, 'N': 1, 'S': 1, 'T': 1, 'R': 1,
                      'D': 2, 'G': 2,
                      'B': 3, 'C': 3, 'M': 3, 'P': 3,
                      'F': 4, 'H': 4, 'V': 4, 'W': 4, 'Y': 4,
                      'K': 5,
                      'J': 8, 'X': 8,
                      'Q': 10, 'Z': 10}

    russian_scores = {'А': 1, 'В': 1, 'Е': 1, 'И': 1, 'Н': 1, 'О': 1, 'Р': 1, 'С': 1, 'Т': 1,
                      'Д': 2, 'К': 2,'Л': 2, 'М': 2, 'П': 2, 'У': 2,
                      'Б': 3, 'Г': 3, 'Ё': 3, 'Ь': 3, 'Я': 3,
                      'Й': 4, 'Ы': 4,
                      'Ж': 5, 'З': 5, 'Х': 5, 'Ц': 5, 'Ч': 5,
                      'Ш': 8, 'Э': 8, 'Ю': 8,
                      'Ф': 10, 'Щ': 10, 'Ъ': 10}
                      
    score = 0
    word = word.upper()  # Приводим слово к верхнему регистру, чтобы сравнивать со словарями

    if word.isalpha():  # Проверяем, что введено только слово
        if word[0] in english_scores:  # Если первая буква английская
            for letter in word:
                score += english_scores[letter]
        elif word[0] in russian_scores:  # Если первая буква русская
            for letter in word:
                score += russian_scores[letter]
    else:
        print("Некорректный ввод. Пожалуйста, введите только одно слово.")

    return score

# Пример использования функции
word = input("Введите слово: ")
print(calculate_score(word))